plugins {
    id 'application'
    //id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'org.openjfx.javafxplugin' version '0.0.14'
    id 'org.beryx.jlink' version '2.26.0'
}

defaultTasks 'build'

repositories {
    mavenCentral()
}

javafx {
    version = '17'
    modules = [ \
        'javafx.controls',
        'javafx.fxml',
    ]
}

application {
    mainClass = 'nl.nlcode.m.JfxLauncher'
    mainModule = 'nl.nlcode.m'
    applicationName = 'm_nlcode_nl'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

group = 'nl.nlcode'
version = '1.0.0'
sourceCompatibility = '1.16'

ext {
    jacksonVersion = '2.14.2'
}

dependencies {
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30';
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    //implementation group: 'org.controlsfx', name: 'controlsfx', version: '11.0.1'
    implementation('org.controlsfx:controlsfx:11.0.1') {
        exclude group: 'org.openjfx'
    }
    implementation 'uk.co.xfactory-librarians:coremidi4j:1.6'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "$jacksonVersion"
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "$jacksonVersion"
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: "$jacksonVersion"

    testImplementation "org.testfx:testfx-core:4.0.16-alpha"
    //testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation "org.testfx:testfx-core:4.0.16-alpha"
    testImplementation "org.testfx:testfx-junit5:4.0.16-alpha"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation "org.testfx:testfx-junit5:4.0.16-alpha"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

//  --add-modules "jdk.localedata,java.base,java.desktop,java.management,java.naming,java.prefs,java.scripting,java.sql,jdk.jfr,jdk.jsobject,jdk.unsupported,jdk.xml.dom" \
jlink {
    options = [
        '--strip-debug',
        '--compress', '2',
        '--no-header-files',
        '--no-man-pages',
        '--strip-native-commands',
        '--include-locales=en,nl'
    ]
    launcher{
        name = 'hello'
        jvmArgs = ['-Dlog4j.configurationFile=./log4j2.xml']
    }
    // next block manually edited after creation by: ./gradlew suggestMergedModuleInfo
    mergedModule {
        requires 'java.management';
        requires 'java.naming';
        requires 'java.logging';
    //    requires 'java.sql';
        requires 'java.xml';
        requires 'java.desktop';
        requires 'jdk.unsupported';
    //    provides 'javax.servlet.ServletContainerInitializer' with 'ch.qos.logback.classic.servlet.LogbackServletContainerInitializer';
        provides 'javax.sound.midi.spi.MidiDeviceProvider' with 'uk.co.xfactorylibrarians.coremidi4j.CoreMidiDeviceProvider';
    }
    jpackage {
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
            imageOptions += ['--win-console']
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


//shadowJar {
   //archiveBaseName.set("$archiveBaseName-fatjar")
   //archiveClassifier.set('')
   //archiveVersion.set('')
//}
//mac {
//    icon = "m.nlcode.m.icns"
//}

/*
detected_modules=`jdeps \
  -q \
  --multi-release 16 \
  --ignore-missing-deps \
  --print-module-deps \
  --class-path "build/install/m_nlcode_nl/jars/*" \
    build/classes/java/main/nl/nlcode/m/JfxLauncher.class`
echo "detected modules: ${detected_modules}"

// OR SIMPLY:
jdeps \
  -q \
  --multi-release 17 \
  --ignore-missing-deps \
  --print-module-deps \
  --class-path "build/install/m_nlcode_nl/jars/*" \
    build/classes/java/main/nl/nlcode/m/JfxLauncher.class


// OUTPUT: java.base,java.desktop,java.management,java.naming,java.prefs,java.scripting,java.sql,jdk.jfr,jdk.jsobject,jdk.unsupported,jdk.xml.dom
// manually added: jdk.localedata

// build/install/m_nlcode_nl/lib

jlink \
  --strip-native-commands \
  --no-header-files \
  --no-man-pages  \
  --compress=2  \
  --strip-debug \
  --add-modules "jdk.localedata,java.base,java.desktop,java.management,java.naming,java.prefs,java.scripting,java.sql,jdk.jfr,jdk.jsobject,jdk.unsupported,jdk.xml.dom" \
  --include-locales=en,nl \
  --output build/java-runtime

//jpackage --name m.nlcode.nl --input . --main-jar m_nlcode_nl-1.0.0.jar --jlink-options --bind-services --main-class nl.nlcode.m.ui.App

// --name name under the installer and app icon on a mac
// --mac-package-name filename of the dmg (or pgk)
jpackage \
--type dmg \
--dest build/distributions \
--input build/libs \
--name m_nlcode_nl \
--main-class nl/nlcode/m/JfxLauncher \
--main-jar m_nlcode_nl-1.0.0.jar \
--java-options -Xmx2048m \
--runtime-image build/java-runtime \
--icon src/main/resources/m.nlcode.nl.icns \
--app-version 1.0.0 \
--vendor "nlcode.nl" \
--copyright "Copyright Â© 2023 Leo Mekenkamp" \
--mac-package-identifier m_nlcode_nl \
--mac-package-name m.nlcode.nl
*/