plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

defaultTasks 'build'

repositories {
    mavenCentral()
}

def gitBranch() {
    def branch = "<unknown>"
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

application {
    mainClass = 'nl.nlcode.m.cli.CliApp'
    mainModule = 'nl.nlcode.m.cli'
    applicationName = 'm_nlcode_nl'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

group = 'nl.nlcode'
version = versionNumber

dependencies {
    implementation(project(':engine'))
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.7';
    implementation group: 'org.jline', name: 'jline', version: '3.26.3'
    implementation group: 'info.picocli', name: 'picocli', version: '4.7.6'

    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


task artifacts(type: Copy) {
    description 'Copies all (Github generated) artifacts into one place.'
    from jar
    from shadowJar
    into "$buildDir/artifacts"
    include '*.jar'
    include '*.pkg'
    include '*.dmg'
    include '*.deb'
    include '*.rpm'
    include '*.exe'
    include '*.msi'
}
