list.newbie=\
List of MidiInOuts in project <%2$s>:\n\
type                 | name\n\
---------------------+--------------------\n\
%1$s
list.informative=\
type                 | name\n\
---------------------+--------------------\n\
%1$s
list.minimal=%1$s
list.item.minimal=%1$s "%2$s\"\n
list.item.informative=%1$-20s | %2$s\n
verbosity.newbie=\
Verbosity is currently set to <%1$s>.\n\
You can use the command @|bold 'verbosity <value>' |@ to change verbosity.
verbosity.informative=Verbosity is currently set to <%1$s>.
verbosity.minimal=%1$s
verbosity.set.newbie=\
Verbosity is now set to <%1$s>.\n\
This setting will give you the most information and will guide you in use of this application.\n\
You can check on the current verbosity value by simply typing 'verbosity' without quotes.
verbosity.set.informative=Verbosity is currently set to <%1$s>.
verbosity.set.minimal=
new.done.newbie=Note that a file with the same path does not yet exist: you need to save first with 'project save'.
# Ui feedback
MidiInOutCli.nameChanged.minimal="%2$s" now named "%3$s"
MidiInOutCli.nameChanged.informative=The %1$s instance formerly known as "%2$s" is now called "%3$s".
MidiInOutCli.nameChanged.newbie=\
The %1$s instance formerly known as "%2$s" is now called "%3$s".\n\
You can use the command 'rename "%3$s" "%2$s"' (without single quotes) to undo the name change.
MidiInOutCli.sendingTo.minimal="%2$s" sending to "%4$s"
MidiInOutCli.sendingTo.informative=%1$s "%2$s" can now send to %3$s "%4$s"
MidiInOutCli.sendingTo.newbie=\
%1$s "%2$s" can now send MIDI messages to %3$s "%4$s".\n\
You can use the command 'disconnect "%2$s" "%4$s"' (without single quotes) to stop this sending.
MidiInOutCli.notSendingTo.minimal="%2$s" stopped sending to "%4$s"
MidiInOutCli.notSendingTo.informative=%1$s "%2$s" stopped sending to %3$s "%4$s"
MidiInOutCli.notSendingTo.newbie=\
%1$s "%2$s" stopped sending MIDI messages to %3$s "%4$s".\n\
You can use the command 'connect "%2$s" "%4$s"' (without single quotes) to re-enable sending.
MidiDeviceLink.midiDeviceChanged.minimal=%1$s linked to %2$s
MidiDeviceLink.midiDeviceChanged.informative=MidiDeviceLink %1$s is now linked to MIDI device %2$s.
MidiDeviceLink.midiDeviceChanged.newbie=MidiDeviceLink %1$s is now linked to MIDI device %2$s.
welcome.minimal=
welcome.informative=\
Welcome to m.nlcode.nl.\n\
Special thanks to https://picocli.info and https://github.com/DerekCook/CoreMidi4J.
welcome.informative=\
Welcome to m.nlcode.nl.\n\
Special thanks to https://picocli.info and https://github.com/DerekCook/CoreMidi4J.\n\
Enter the command 'help' (without the quotes) to find your way around here.
save.error.minimal=%1$s: %2$s, %3$
save.error.informative=Could not save project %1$s because of %2$s: %3$s.
save.error.newbie=\
Could not save project %1$s because of %2$s: %3$s.\n\
I am sorry, but this is something I cannot help you with. You need to solve this yourself.
project.none.minimal=no project
project.none.informative=There is no default project, nor did you specify a specific project.
project.none.newbie=\
There is no default project, nor did you specify a specific project.\n\
Make sure there is an open project (command 'open' or 'new' (without the quotes)).\n\
If there is an open project but no default one, you can\n\
\u0020   1) either make that project default with 'renum' (without the quotes);\n\
\u0020   2) or specify a specific project with option '--projectId' or '--projectName'
project.id.none.minimal=no %1$s
project.id.none.informative=There is no project with id "%1$s".
project.id.none.newbie=\
There is no project with id "%1$s".\n\
You can use the command 'project list' (without quotes) to display a list of open projects.
project.name.none.minimal=no open %1$s
project.name.none.informative=There is no project with the name "%1$s".
project.name.none.newbie=\
There is no project with the name "%1$s".\n\
You can use the command 'project list' (without quotes) to display a list of open projects.
MidiInOut.name.none.minimal=no "%1$s" in "%2$s"
MidiInOut.name.none.informative=There is no MidiInOut instance with the name "%1$s" in project "%2$s".
MidiInOut.name.none.newbie=\
There is no MidiInOut instance with the name "%1$s" in project "%2$s".\n\
You can use the command 'list --projectName "%2$s"' (without single quotes) to display which instances do exist.
MidiInOut.type.none.minimal=no "%1$s"
MidiInOut.type.none.informative=There is no MidiInOut type "%1$s".
MidiInOut.type.none.newbie=\
There is no MidiInOut type "%1$s".
project.dirty.minimal=unsaved changes in "%1$s"
project.dirty.informative=Stubbornly refusing to close because of unsaved changes in "%1$s".
project.dirty.informative=\
Stubbornly refusing to close because of unsaved changes in "%1$s".\n\
You can sue the command 'project save' (without quotes) to save your changes,\n\
or the option '--force' to delete those changes, i.e. not save them.
