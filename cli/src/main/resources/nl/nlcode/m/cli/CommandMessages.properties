# used in unit test
__fallbackTest_minimal.minimal=minimal
__fallbackTest_brief.brief=brief
__fallbackTest_informative.informative=informative
__fallbackTest_newbie.newbie=newbie
__listTest.empty.minimal=empty %1$s
__listTest.item.minimal=item_%1$s item_%2$s\u0020
__listTest.minimal=list %2$s %1$s
__listTestNoEmpty.item.minimal=item_%1$s item_%2$s\u0020
__listTestNoEmpty.minimal=list %2$s %1$s
__listTestNewlines.item.minimal=\n\item %1$s
__listTestNewlines.minimal=list%1$s
# application command messages
list.item.minimal=\n%1$s "%2$s\"
list.item.informative=\n%1$-20s | "%2$s"
list.minimal="%2$s"%1$s
list.informative=\
MidiInOut instances in project "%2$s":\n\
type                 | name\n\
---------------------+--------------------\n\
%1$s
project.minimal="%2$s"\n\
-- midiInOut\n\
%1$s
project.informative=Information on project "%2$s":\n\
MidiInOut instances:\n\
type                 | name\n\
---------------------+--------------------\n\
%1$s
project.newbie=\
Information on project "%2$s":\n\
MidiInOut instances:\n\
type                 | name\n\
---------------------+--------------------\n\
%1$s
project.midiInOut.minimal=%1$s "%2$s\"\n
project.midiInOut.informative=%1$-20s | "%2$s"\n
project.none.minimal=
project.none.brief=no default project
project.none.informative=There is no default project.
project.none.newbie=\
There is no default project.\n\
If there are open projects, you can set a default with 'renum' (without quotes).\
If there are no open projects, create a new one ('project new') or open an\
existing  one ('project open <filename>').
verbosity.minimal=%1$s
verbosity.informative=Verbosity is currently set to <%1$s>.
verbosity.newbie=\
Verbosity is currently set to "%1$s".\n\
This setting will give you the most information and will guide you in use of this application.\n\
You can use the command @|bold 'verbosity <value>' |@ to change verbosity.
verbosity.set.minimal=
verbosity.set.brief=verbosity "%1$s"
verbosity.set.informative=Verbosity is now set to <%1$s>.
verbosity.set.newbie=\
Verbosity is now set to "%1$s".\n\
You can check on the current verbosity value by simply typing 'verbosity' without quotes.
new.done.minimal=
new.done.newbie=Note that a file with the same path does not yet exist: you need to save first with 'project save'.
# Ui feedback
MidiInOutCli.nameChanged.minimal=
MidiInOutCli.nameChanged.brief="%2$s" now named "%3$s"
MidiInOutCli.nameChanged.informative=The %1$s instance formerly known as "%2$s" is now called "%3$s".
MidiInOutCli.nameChanged.newbie=\
The %1$s instance formerly known as "%2$s" is now called "%3$s".\n\
You can use the command 'rename "%3$s" "%2$s"' (without single quotes) to undo the name change.
MidiInOutCli.new.minimal="%2$s"
MidiInOutCli.new.brief=new %1$s: "%2$s"
MidiInOutCli.new.informative=A new MidiInOut instance of type %1$s and named "%2$s" has been created.
MidiInOutCli.new.newbie=\
A new MidiInOut instance of type %1$s and named "%2$s" has been created.\n\
You can use the command '"%2$s" delete' (without single quotes) to undo the creation.
MidiInOutCli.sendingTo.minimal=
MidiInOutCli.sendingTo.brief=%1$s "%2$s" \u2501\u2501\u2501\u25b6 %3$s "%4$s"
MidiInOutCli.sendingTo.informative=%1$s "%2$s" can now send to %3$s "%4$s"
MidiInOutCli.sendingTo.newbie=\
%1$s "%2$s" can now send MIDI messages to %3$s "%4$s".\n\
You can use the command 'disconnect "%2$s" "%4$s"' (without single quotes) to stop this sending.
MidiInOutCli.notSendingTo.minimal=
MidiInOutCli.notSendingTo.brief="%2$s" \u2501\u2718\u2501\u25b6 "%4$s"
MidiInOutCli.notSendingTo.informative=%1$s "%2$s" stopped sending to %3$s "%4$s"
MidiInOutCli.noverbosity minimaltSendingTo.newbie=\
%1$s "%2$s" stopped sending MIDI messages to %3$s "%4$s".\n\
You can use the command 'connect "%2$s" "%4$s"' (without single quotes) to re-enable sending.
MidiInOutCommand.connectedList.empty.minimal=
MidiInOutCommand.connectedList.empty.brief=not connected
MidiInOutCommand.connectedList.empty.informative=%1$s "%2$s" is not connected to other midiInOut instances.
MidiInOutCommand.connectedList.empty.newbie=%1$s %2$s" is not connected to other midiInOut instances.\n\
You can use '"%2$s" connect <receiver_name>' (without the single quotes) to connect others.
MidiInOutCommand.connectedList.item.minimal=\n%1$s "%2$s"
MidiInOutCommand.connectedList.minimal=%1$s
MidiInOutCommand.connectedList.informative=\
%2$s "%3$s" can send to:%1$s
MidiInOutCommand.connectedList.newbie=\
2$s "%3$s" can send to:%1$s\
You can use '"%3$s" disconnect <receiver_name>' (without the single quotes) to disconnect.
MidiDeviceLink.midiDeviceChanged.minimal=
MidiDeviceLink.midiDeviceChanged.brief=%1$s \u25c0\u2501\u2501\u2501\u25b6 %2$s
MidiDeviceLink.midiDeviceChanged.informative=MidiDeviceLink %1$s is now linked to MIDI device %2$s.
MidiDeviceLink.midiDeviceChanged.newbie=MidiDeviceLink %1$s is now linked to MIDI device %2$s.
welcome.minimal=
welcome.brief=Welcome to m.nlcode.nl.
welcome.informative=\
Welcome to m.nlcode.nl.\n\
Special thanks to https://picocli.info and https://github.com/DerekCook/CoreMidi4J.
welcome.informative=\
Welcome to m.nlcode.nl.\n\
Special thanks to https://picocli.info and https://github.com/DerekCook/CoreMidi4J.\n\
Enter the command 'help' (without the quotes) to find your way around here.
save.error.minimal=%1$s: %2$s, %3$
save.error.informative=Could not save project %1$s because of %2$s: %3$s.
save.error.newbie=\
Could not save project %1$s because of %2$s: %3$s.\n\
I am sorry, but this is something I cannot help you with. You need to solve this yourself.
project.id.none.minimal=no %1$s
project.id.none.informative=There is no project with id "%1$s".
project.id.none.newbie=\
There is no project with id "%1$s".\n\
You can use the command 'project list' (without quotes) to display a list of open projects.
project.name.none.minimal=no open "%1$s"
project.name.none.informative=There is no project with the name "%1$s".
project.name.none.newbie=\
There is no project with the name "%1$s".\n\
You can use the command 'project list' (without quotes) to display a list of open projects.
MidiInOut.name.none.minimal=no "%1$s" in "%2$s"
MidiInOut.name.none.informative=There is no MidiInOut instance with the name "%1$s" in project "%2$s".
MidiInOut.name.none.newbie=\
There is no MidiInOut instance with the name "%1$s" in project "%2$s".\n\
You can use the command 'list --projectName "%2$s"' (without single quotes) to display which instances do exist.
MidiInOut.type.none.minimal=no "%1$s"
MidiInOut.type.none.informative=There is no MidiInOut type "%1$s".
MidiInOut.type.none.newbie=\
There is no MidiInOut type "%1$s".
project.dirty.minimal=unsaved changes in "%1$s"
project.dirty.informative=Stubbornly refusing to close because of unsaved changes in "%1$s".
project.dirty.informative=\
Stubbornly refusing to close because of unsaved changes in "%1$s".\n\
You can sue the command 'project save' (without quotes) to save your changes,\n\
or the option '--force' to delete those changes, i.e. not save them.
project.closed.minimal=
project.closed.brief="%1$s" closed
project.closed.informative=The project "%1$s" has been closed.
project.closed.newbie=The project "%1$s" has been closed.\n\
Depending on you having saved the project, you can re-open it with 'project open "%1$s"' (without the single quotes).
device.no_open_devices.minimal=
device.no_open_devices.brief=no open devices
device.no_open_devices.informative=There are no open MIDI devices.
device.no_open_devices.newbie=\
There are no open MIDI devices.\n\
You can use 'device open "<device_name>"' (without single quotes) to open a device named <device_name>.
device.open_devices.minimal=-- open
device.open_devices.brief=open devices
device.open_devices.informative=List of open MIDI devices:
device.open_devices.newbie=\
List of open MIDI devices:\n\
You can use 'device close "<device_name>"' (without single quotes) to close a device named <device_name>.
device.no_closed_devices.minimal=
device.no_closed_devices.brief=no closed devices
device.no_closed_devices.informative=There are no closed MIDI devices.
device.no_closed_devices.newbie=\
There are no closed MIDI devices.\n\
You can use 'device close "<device_name>"' (without single quotes) to close a device named <device_name>.
device.closed_devices.minimal=-- closed
device.closed_devices.brief=closed devices
device.closed_devices.informative=List of closed MIDI devices:
device.closed_devices.newbie=\
List of closed MIDI devices:\n\
You can use 'device open "<device_name>"' (without single quotes) to open a device named <device_name>.